{"version":3,"file":"14.js","mappings":"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","sources":["webpack://app_user/../packages/utilities/src/index.ts","webpack://app_user/../packages/authentication/src/apis.ts","webpack://app_user/./src/components/AppUser/Component.tsx","webpack://app_user/./src/components/AppUser/styles.module.scss?ab5e","webpack://app_user/./src/App.tsx","webpack://app_user/./src/components/ResetPasswordForm/Component.tsx","webpack://app_user/./src/bootstrap.tsx"],"sourcesContent":["import { redirect } from \"react-router-dom\";\r\nimport type { Response } from \"./types\";\r\n\r\nexport function getToken() {\r\n  const cookieString = document.cookie; // Get cookie string\r\n  console.log(cookieString);\r\n  // const token = cookieString\r\n  //   .split(\";\")\r\n  //   .map((cookie) => cookie.trim())\r\n  //   .find((cookie) => cookie.startsWith(\"token=\"))\r\n  //   ?.split(\"=\")[1]; // Extract token value from cookie string\r\n  // console.log(token);\r\n  // debugger;\r\n  return cookieString;\r\n}\r\n\r\nexport function createLoader(remoteEntry: () => Promise<any>) {\r\n  return async function () {\r\n    let { loader } = await remoteEntry();\r\n    return await loader();\r\n  };\r\n}\r\n\r\nexport function createProtectedLoader(remoteEntry: () => Promise<any>) {\r\n  return async function () {\r\n    let { loader } = await remoteEntry();\r\n    const user = sessionStorage.getItem(\"user\");\r\n\r\n    // Exclude /login path from being recorded as last visited page\r\n    const currentPath = window.location.pathname;\r\n    const isLoginPage = currentPath === \"/login\";\r\n\r\n    //save user last path in session\r\n    sessionStorage.setItem(\"lastVisitedPage\", currentPath);\r\n\r\n    // const data = localStorage.getItem(\"user\");\r\n    if (!user && !isLoginPage) {\r\n      return redirect(\"/login\");\r\n    }\r\n\r\n    const loaderData = await loader();\r\n\r\n    return { user, ...loaderData };\r\n  };\r\n}\r\n\r\nasync function request<T>(\r\n  url: string,\r\n  method: RequestInit[\"method\"],\r\n  requestPayload?: any,\r\n  config?: RequestInit\r\n): Promise<Response<T>> {\r\n  try {\r\n    // const token = getToken();\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        // ...(token && { Authorization: `Bearer ${token}` }),\r\n      },\r\n      method,\r\n      ...(requestPayload && { body: JSON.stringify(requestPayload) }),\r\n      ...config,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const data = (await response.json()) as T;\r\n      return {\r\n        data,\r\n      };\r\n    } else {\r\n      const errorMessage = (await response.json()) as string;\r\n      return {\r\n        error: response.status,\r\n        errorMessage,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      error: -1,\r\n      errorMessage: error.toString(),\r\n    };\r\n  }\r\n}\r\n\r\nexport const api = {\r\n  get: <ResponseData>(url: string) => request<ResponseData>(url, \"GET\"),\r\n  post: <ResponseData>(url: string, requestPayload: any) =>\r\n    request<ResponseData>(url, \"POST\", requestPayload),\r\n  put: <ResponseData>(url: string, requestPayload: any) =>\r\n    request<ResponseData>(url, \"PUT\", requestPayload),\r\n  batch: <ResponseData>(url: string, requestPayload: any) =>\r\n    request<ResponseData>(url, \"BATCH\", requestPayload),\r\n  delete: <ResponseData>(url: string) => request<ResponseData>(url, \"DELETE\"),\r\n};\r\n","import { api } from \"@mimo/utilities\";\r\nimport type {\r\n  RegisterRequest,\r\n  RegisterResponse,\r\n  LoginRequest,\r\n  LoginResponse,\r\n  ResetPassRequest,\r\n  ResetPassResponse,\r\n  LogoutResponse,\r\n  GetUserResponse,\r\n} from \"./types\";\r\n\r\n// export async function login(payload: LoginRequest) {\r\n//   return api.post<LoginResponse>(\"/api/Authenticate/login\", payload);\r\n// }\r\n\r\nexport async function login(payload: LoginRequest) {\r\n  console.log(payload);\r\n  return api.post<LoginResponse>(\"/api/auth/login\", payload);\r\n}\r\n\r\nexport async function registerUser(payload: RegisterRequest) {\r\n  return api.post<RegisterResponse>(\"/api/auth/register\", payload);\r\n}\r\n\r\nexport async function resetPassword(payload: ResetPassRequest) {\r\n  return api.post<ResetPassResponse>(\"/api/auth/changePassword\", payload);\r\n}\r\n\r\nexport async function logoutUser() {\r\n  return api.delete<LogoutResponse>(\"/api/auth/logout\");\r\n}\r\n\r\n// export async function getUser() {\r\n//   return api.get<GetUserResponse>(\"/api/Authenticate/userName\");\r\n// }\r\n\r\nexport async function getUser() {\r\n  return api.get<GetUserResponse>(\"/api/auth/username\");\r\n}\r\n","import React,\r\n{\r\n  // useEffect,\r\n  // useState\r\n} from \"react\";\r\n\r\nimport { Outlet, useLoaderData, useNavigate, useParams } from \"react-router-dom\";\r\n\r\n//styles\r\nimport {\r\n  Image,\r\n  Tab,\r\n  TabList,\r\n  Button,\r\n  Divider,\r\n  Dialog,\r\n  DialogTrigger,\r\n  DialogSurface,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogBody,\r\n  DialogActions,\r\n  SelectTabData,\r\n  SelectTabEvent,\r\n  Text,\r\n  useId,\r\n  ToastTitle,\r\n  Toast,\r\n  useToastController,\r\n  Toaster,\r\n  ToastIntent,\r\n} from \"@fluentui/react-components\";\r\nimport {\r\n  bundleIcon,\r\n  Person24Regular,\r\n  Person24Filled,\r\n  Key24Regular,\r\n  Key24Filled,\r\n  Settings24Regular,\r\n  SignOut24Regular,\r\n  Warning24Regular\r\n} from \"@fluentui/react-icons\";\r\n// import { Alert } from \"@fluentui/react-components/unstable\";\r\nimport \"../../styles/index.scss\"\r\nimport styles from './styles.module.scss';\r\n\r\n\r\n// APIs\r\nimport { logoutUser } from \"@mimo/authentication\";\r\n\r\n\r\n//other component\r\n// import ResetPasswordForm from \"../ResetPasswordForm/Component\";\r\n\r\nexport default function AppUser() {\r\n  const user = sessionStorage.getItem(\"user\")\r\n\r\n  //toaster fluent\r\n  const toasterId = useId(\"toaster\");\r\n  const { dispatchToast } = useToastController(toasterId);\r\n  const [intent, setIntent] = React.useState<\r\n    ToastIntent | \"progress\" | \"avatar\"\r\n  >(\"info\");\r\n  const notify = (message: string) => {\r\n    switch (intent) {\r\n      case \"error\":\r\n      case \"info\":\r\n      case \"success\":\r\n      case \"warning\":\r\n        dispatchToast(\r\n          <Toast>\r\n            <ToastTitle>{message}</ToastTitle>\r\n          </Toast>,\r\n          { position: \"top-end\", intent }\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  //alert message\r\n  // const [alertMessage, setAlertMessage] = useState<string | undefined>(undefined);\r\n  // const [isError, setIsError] = useState<boolean>()\r\n\r\n  //router things\r\n  const data = useLoaderData();\r\n  console.log('user: ', data);\r\n  const navigate = useNavigate();\r\n  const { tab } = useParams();\r\n\r\n  const handleLogout = async () => {\r\n    console.log(\"logout\")\r\n    sessionStorage.clear();\r\n    const { data, error, errorMessage } = await logoutUser();\r\n    if (error) {\r\n      const obj = JSON.stringify(errorMessage);\r\n      const errMessage = JSON.parse(obj)\r\n      // setAlertMessage(errMessage.message);\r\n      // setIsError(true)\r\n\r\n      setIntent(\"error\")\r\n      notify(errMessage.message)\r\n    }\r\n    if (data) {\r\n      const { message } = data;\r\n      // setAlertMessage(message);\r\n      // setIsError(false)\r\n\r\n      setIntent(\"success\")\r\n      notify(message)\r\n    }\r\n    navigate(\"/\");\r\n  }\r\n\r\n  //for style\r\n  const Person = bundleIcon(Person24Filled, Person24Regular);\r\n  const Key = bundleIcon(Key24Filled, Key24Regular);\r\n  const renderTabs = () => {\r\n    return (\r\n      <>\r\n        <Tab icon={<Person />}\r\n          value=\"\">\r\n          User Profile\r\n        </Tab>\r\n        <Tab icon={<Key />}\r\n          value=\"reset\">\r\n          Change Password\r\n        </Tab>\r\n        <Tab icon={<Settings24Regular />}\r\n          value=\"setting\">\r\n          Setting\r\n        </Tab>\r\n\r\n        <Divider />\r\n\r\n        <Dialog modalType=\"alert\">\r\n          <DialogTrigger disableButtonEnhancement>\r\n            <Button size=\"large\"\r\n              appearance=\"subtle\"\r\n              icon={<SignOut24Regular />}\r\n            >Logout</Button>\r\n          </DialogTrigger>\r\n          <DialogSurface>\r\n            <DialogBody>\r\n              <DialogTitle><Warning24Regular /></DialogTitle>\r\n              <DialogContent>\r\n                Proceed to logout?\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <DialogTrigger disableButtonEnhancement>\r\n                  <Button appearance=\"secondary\">Cancel</Button>\r\n                </DialogTrigger>\r\n                <Button appearance=\"primary\" onClick={handleLogout}>Logout</Button>\r\n              </DialogActions>\r\n            </DialogBody>\r\n          </DialogSurface>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const handleTabClick = (_event: SelectTabEvent, data: SelectTabData) => {\r\n    navigate(`/user/${data.value}`);\r\n  };\r\n\r\n\r\n\r\n\r\n  //for alert animation\r\n  // useEffect(() => {\r\n  //   let timeoutId: any;\r\n\r\n  //   if (alertMessage) {\r\n  //     timeoutId = setTimeout(() => {\r\n  //       setAlertMessage('');\r\n  //     }, 8000);\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     clearTimeout(timeoutId);\r\n  //   };\r\n  // }, [alertMessage]);\r\n\r\n  return <>\r\n    <Toaster toasterId={toasterId} />\r\n\r\n    {/* <div className={styles.alertSection}>\r\n      {alertMessage && (\r\n        <Alert intent={isError ? \"error\" : \"success\"}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n    </div> */}\r\n\r\n    <div className={styles.headerContainer} >\r\n      <div className={styles.userHeader}>\r\n        <Image\r\n          alt=\"Amanda's avatar\"\r\n          shape=\"rounded\"\r\n          src=\"https://fabricweb.azureedge.net/fabric-website/assets/images/avatar/AmandaBrady.jpg\"\r\n          height={200}\r\n          width={200}\r\n        />\r\n        <Text size={900}>{user}</Text>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={styles.userListContainer}>\r\n      <TabList\r\n        defaultSelectedValue=\"\"\r\n        vertical\r\n        onTabSelect={handleTabClick}\r\n        selectedValue={tab}>\r\n        {renderTabs()}\r\n      </TabList>\r\n\r\n      <div className={styles.outletContainer}>\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  </>;\r\n}; ","// extracted by mini-css-extract-plugin\nexport default {\"headerContainer\":\"SGQq3caMRT30k6NDPzIg\",\"userHeader\":\"_E57caGqeAIaIa5wz5vG\",\"userListContainer\":\"j_OAwhojrNG8CpT5WoIQ\",\"outletContainer\":\"a08ehgc3athnUTYaWAuV\"};","import \"./styles/index.scss\";\r\nimport React from \"react\";\r\nimport AppUser from \"./components/AppUser/Component\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n\r\n      <section className=\"hero\"></section>\r\n      <main>\r\n        <section>\r\n          <h1>User Area</h1>\r\n        </section>\r\n        <AppUser />\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useLoaderData, useNavigate } from \"react-router-dom\";\r\n\r\n//styles\r\nimport {\r\n  Input,\r\n  Button,\r\n  Field,\r\n  useId,\r\n  ToastTitle,\r\n  Toast,\r\n  useToastController,\r\n  Toaster,\r\n  ToastIntent,\r\n} from \"@fluentui/react-components\";\r\nimport {\r\n  Eye24Regular,\r\n  EyeOff24Regular\r\n} from \"@fluentui/react-icons\";\r\n\r\nimport \"../../styles/index.scss\"\r\n// import styles from './styles.module.scss';\r\n\r\n// APIs\r\nimport { ResetPassRequest, resetPassword } from \"@mimo/authentication\";\r\n\r\n//form validation\r\nimport { useForm, SubmitHandler, FieldValues } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\nconst getCharacterValidationError = (str: string) => {\r\n  return `Your password must have at least 1 ${str} character`;\r\n};\r\n\r\nconst schema = yup.object({\r\n  oldPassword: yup.string()\r\n    .min(6, 'Passsword must be at least 6 characters long')\r\n    .max(12, 'Passsword must be below 12 characters')\r\n    .matches(/[0-9]/, getCharacterValidationError(\"digit\"))\r\n    .matches(/[a-z]/, getCharacterValidationError(\"lowercase\"))\r\n    .matches(/[A-Z]/, getCharacterValidationError(\"uppercase\"))\r\n    .matches(/[^\\w]/, getCharacterValidationError(\"symbol\"))\r\n    .required('Please Enter your Password'),\r\n  newPassword: yup.string()\r\n    .min(6, 'Passsword must be at least 6 characters long')\r\n    .max(12, 'Passsword must be below 12 characters')\r\n    .matches(/[0-9]/, getCharacterValidationError(\"digit\"))\r\n    .matches(/[a-z]/, getCharacterValidationError(\"lowercase\"))\r\n    .matches(/[A-Z]/, getCharacterValidationError(\"uppercase\"))\r\n    .matches(/[^\\w]/, getCharacterValidationError(\"symbol\"))\r\n    .notOneOf([yup.ref(\"oldPassword\")], 'New Password cannot be the same as Current Password')\r\n    .required('Please Enter your Password'),\r\n  confirmNewPassword: yup.string()\r\n    .required(\"Please re-enter your new password\")\r\n    .oneOf([yup.ref(\"newPassword\")], \"New Password does not match\"),\r\n}).required();\r\n\r\nexport default function ResetPasswordForm() {\r\n\r\n  //toaster fluent\r\n  const toasterId = useId(\"toaster\");\r\n  const { dispatchToast } = useToastController(toasterId);\r\n  const [intent, setIntent] = useState<ToastIntent>(\"success\");\r\n  const notify = (message: string) => {\r\n    switch (intent) {\r\n      case \"error\":\r\n      case \"success\":\r\n        dispatchToast(\r\n          <Toast>\r\n            <ToastTitle>{message}</ToastTitle>\r\n          </Toast>,\r\n          { position: \"top-end\", intent }\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  //router things\r\n  const data = useLoaderData();\r\n  console.log('ResetPasswordForm data: ', data);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  //for password style\r\n  type InputTypes = {\r\n    oldPassword: \"password\" | \"text\";\r\n    newPassword: \"password\" | \"text\";\r\n    confirmNewPassword: \"password\" | \"text\";\r\n  };\r\n  const [inputTypes, setInputTypes] = useState<InputTypes>({\r\n    oldPassword: \"password\",\r\n    newPassword: \"password\",\r\n    confirmNewPassword: \"password\"\r\n  });\r\n  const togglePasswordVisibility = (fieldName: keyof InputTypes) => {\r\n    setInputTypes((prevTypes) => ({\r\n      ...prevTypes,\r\n      [fieldName]: prevTypes[fieldName] === \"password\" ? \"text\" : \"password\"\r\n    }));\r\n  };\r\n\r\n  //react-hook-form\r\n  const { register,\r\n    handleSubmit,\r\n    trigger,\r\n    formState: { errors, isDirty, isValid }\r\n  } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const handleInputBlur = async (fieldName: string) => {\r\n    await trigger(fieldName);\r\n  };\r\n\r\n  const convertToResetRequest = (dataInput: FieldValues, username: string): ResetPassRequest => {\r\n    const { oldPassword, newPassword, confirmNewPassword } = dataInput;\r\n    return {\r\n      username: username,\r\n      oldPassword: oldPassword as string,\r\n      newPassword: newPassword as string,\r\n      confirmNewPassword: confirmNewPassword as string,\r\n    };\r\n  };\r\n\r\n  //handle submit\r\n  const onSubmit: SubmitHandler<FieldValues> = async (dataInput, event?: React.BaseSyntheticEvent) => {\r\n    event?.preventDefault();\r\n\r\n    const username = sessionStorage.getItem(\"user\") ?? \"\"\r\n    const resetRequest = convertToResetRequest(dataInput, username);\r\n    const { data, error, errorMessage } = await resetPassword(resetRequest);\r\n\r\n    if (error) {\r\n      const obj = JSON.stringify(errorMessage);\r\n      const errMessage = JSON.parse(obj)\r\n\r\n      setIntent(\"error\")\r\n      notify(errMessage.message)\r\n    }\r\n    if (data) {\r\n      const { message } = data;\r\n\r\n      setIntent(\"success\")\r\n      notify(message)\r\n      setTimeout(() => {\r\n        navigate(\"/user\");\r\n      }, 1500);\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return <>\r\n    <Toaster toasterId={toasterId} />\r\n\r\n\r\n    <form method=\"post\" onSubmit={handleSubmit(onSubmit)}>\r\n      <Field\r\n        size=\"large\"\r\n        label=\"Current Password\"\r\n        validationState={errors.oldPassword ? \"error\" : \"none\"}\r\n        validationMessage={\r\n          errors.oldPassword ? `${errors.oldPassword?.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          type={inputTypes.oldPassword}\r\n          contentAfter={inputTypes.oldPassword === \"password\" ?\r\n            <EyeOff24Regular onClick={() => togglePasswordVisibility(\"oldPassword\")} /> :\r\n            <Eye24Regular onClick={() => togglePasswordVisibility(\"oldPassword\")} />\r\n          }\r\n          {...register(\"oldPassword\")}\r\n          onBlur={() => handleInputBlur(\"oldPassword\")}\r\n        />\r\n      </Field>\r\n\r\n      <Field\r\n        size=\"large\"\r\n        label=\"New Password\"\r\n        validationState={errors.newPassword ? \"error\" : \"none\"}\r\n        validationMessage={\r\n          errors.newPassword ? `${errors.newPassword?.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          type={inputTypes.newPassword}\r\n          contentAfter={inputTypes.newPassword === \"password\" ?\r\n            <EyeOff24Regular onClick={() => togglePasswordVisibility(\"newPassword\")} /> :\r\n            <Eye24Regular onClick={() => togglePasswordVisibility(\"newPassword\")} />\r\n          }\r\n          {...register(\"newPassword\")}\r\n          onBlur={() => handleInputBlur(\"newPassword\")}\r\n        />\r\n      </Field>\r\n\r\n      <Field\r\n        size=\"large\"\r\n        label=\"Confirm New Password\"\r\n        validationState={errors.confirmNewPassword ? \"error\" : \"none\"}\r\n        validationMessage={\r\n          errors.confirmNewPassword ? `${errors.confirmNewPassword?.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          type={inputTypes.confirmNewPassword}\r\n          contentAfter={inputTypes.confirmNewPassword === \"password\" ?\r\n            <EyeOff24Regular onClick={() => togglePasswordVisibility(\"confirmNewPassword\")} /> :\r\n            <Eye24Regular onClick={() => togglePasswordVisibility(\"confirmNewPassword\")} />\r\n          }\r\n          {...register(\"confirmNewPassword\")}\r\n          onBlur={() => handleInputBlur(\"confirmNewPassword\")}\r\n        />\r\n      </Field>\r\n\r\n      <Button\r\n        appearance=\"primary\"\r\n        type=\"submit\"\r\n        size=\"large\"\r\n        disabled={!isDirty && !isValid}\r\n      >Change Password</Button>\r\n    </form>\r\n\r\n  </>\r\n};","import App from \"./App\"\r\nimport React from \"react\";\r\n\r\nimport { createRoot } from 'react-dom/client';\r\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\r\nimport { FluentProvider, teamsLightTheme } from '@fluentui/react-components';\r\nimport ResetPasswordForm from \"./components/ResetPasswordForm/Component\";\r\n\r\nconst domNode = document.getElementById('root') as HTMLElement;\r\nconst root = createRoot(domNode);\r\n\r\nconst router = createBrowserRouter([\r\n    {\r\n        path: \"/\",\r\n        element: <App />,\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                element: <ResetPasswordForm />,\r\n            },\r\n        ]\r\n    },\r\n]);\r\n\r\nroot.render(\r\n    <React.StrictMode>\r\n        <FluentProvider theme={teamsLightTheme}>\r\n            <RouterProvider router={router} />\r\n        </FluentProvider>\r\n    </React.StrictMode>\r\n);"],"names":["request","url","method","requestPayload","config","fetch","headers","Accept","body","JSON","stringify","response","status","json","data","errorMessage","error","toString","get","post","put","batch","delete","resetPassword","payload","logoutUser","AppUser","user","sessionStorage","getItem","toasterId","useId","dispatchToast","useToastController","intent","setIntent","notify","message","Toast","ToastTitle","position","console","log","navigate","tab","Person","bundleIcon","Key","Toaster","className","Image","alt","shape","src","height","width","Text","size","TabList","defaultSelectedValue","vertical","onTabSelect","_event","value","selectedValue","Tab","icon","Divider","Dialog","modalType","DialogTrigger","disableButtonEnhancement","Button","appearance","DialogSurface","DialogBody","DialogTitle","DialogContent","DialogActions","onClick","clear","obj","errMessage","parse","getCharacterValidationError","str","schema","oldPassword","min","max","matches","required","newPassword","notOneOf","confirmNewPassword","oneOf","domNode","document","getElementById","root","router","path","element","children","useState","inputTypes","setInputTypes","togglePasswordVisibility","fieldName","prevTypes","resolver","yup","register","handleSubmit","trigger","formState","errors","isDirty","isValid","handleInputBlur","onSubmit","dataInput","event","preventDefault","username","resetRequest","convertToResetRequest","setTimeout","Field","label","validationState","validationMessage","Input","I","type","contentAfter","onBlur","disabled","render","FluentProvider","theme"],"sourceRoot":""}