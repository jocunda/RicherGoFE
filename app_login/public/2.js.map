{"version":3,"file":"2.js","mappings":"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","sources":["webpack://app_login/../packages/utilities/src/index.ts","webpack://app_login/../packages/authentication/src/apis.ts","webpack://app_login/./src/components/CounterAppLogin/Component.tsx","webpack://app_login/./src/components/CounterAppLogin/styles.module.scss?cb1e","webpack://app_login/./src/components/AppRegister/Component.tsx","webpack://app_login/./src/App.tsx","webpack://app_login/./src/bootstrap.tsx"],"sourcesContent":["import { redirect } from \"react-router-dom\";\r\nimport type { Response } from \"./types\";\r\n\r\nexport function getToken() {\r\n  const cookieString = document.cookie; // Get cookie string\r\n  console.log(cookieString);\r\n  // const token = cookieString\r\n  //   .split(\";\")\r\n  //   .map((cookie) => cookie.trim())\r\n  //   .find((cookie) => cookie.startsWith(\"token=\"))\r\n  //   ?.split(\"=\")[1]; // Extract token value from cookie string\r\n  // console.log(token);\r\n  // debugger;\r\n  return cookieString;\r\n}\r\n\r\nexport function createLoader(remoteEntry: () => Promise<any>) {\r\n  return async function () {\r\n    let { loader } = await remoteEntry();\r\n    return await loader();\r\n  };\r\n}\r\n\r\nexport function createProtectedLoader(remoteEntry: () => Promise<any>) {\r\n  return async function () {\r\n    let { loader } = await remoteEntry();\r\n    const user = sessionStorage.getItem(\"user\");\r\n\r\n    // Exclude /login path from being recorded as last visited page\r\n    const currentPath = window.location.pathname;\r\n    const isLoginPage = currentPath === \"/login\";\r\n\r\n    //save user last path in session\r\n    sessionStorage.setItem(\"lastVisitedPage\", currentPath);\r\n\r\n    // const data = localStorage.getItem(\"user\");\r\n    if (!user && !isLoginPage) {\r\n      return redirect(\"/login\");\r\n    }\r\n\r\n    const loaderData = await loader();\r\n\r\n    return { user, ...loaderData };\r\n  };\r\n}\r\n\r\nasync function request<T>(\r\n  url: string,\r\n  method: RequestInit[\"method\"],\r\n  requestPayload?: any,\r\n  config?: RequestInit\r\n): Promise<Response<T>> {\r\n  try {\r\n    // const token = getToken();\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        // ...(token && { Authorization: `Bearer ${token}` }),\r\n      },\r\n      method,\r\n      ...(requestPayload && { body: JSON.stringify(requestPayload) }),\r\n      ...config,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const data = (await response.json()) as T;\r\n      return {\r\n        data,\r\n      };\r\n    } else {\r\n      const errorMessage = (await response.json()) as string;\r\n      return {\r\n        error: response.status,\r\n        errorMessage,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      error: -1,\r\n      errorMessage: error.toString(),\r\n    };\r\n  }\r\n}\r\n\r\nexport const api = {\r\n  get: <ResponseData>(url: string) => request<ResponseData>(url, \"GET\"),\r\n  post: <ResponseData>(url: string, requestPayload: any) =>\r\n    request<ResponseData>(url, \"POST\", requestPayload),\r\n  put: <ResponseData>(url: string, requestPayload: any) =>\r\n    request<ResponseData>(url, \"PUT\", requestPayload),\r\n  batch: <ResponseData>(url: string, requestPayload: any) =>\r\n    request<ResponseData>(url, \"BATCH\", requestPayload),\r\n  delete: <ResponseData>(url: string) => request<ResponseData>(url, \"DELETE\"),\r\n};\r\n","import { api } from \"@mimo/utilities\";\r\nimport type {\r\n  RegisterRequest,\r\n  RegisterResponse,\r\n  LoginRequest,\r\n  LoginResponse,\r\n  ResetPassRequest,\r\n  ResetPassResponse,\r\n  LogoutResponse,\r\n  GetUserResponse,\r\n} from \"./types\";\r\n\r\n// export async function login(payload: LoginRequest) {\r\n//   return api.post<LoginResponse>(\"/api/Authenticate/login\", payload);\r\n// }\r\n\r\nexport async function login(payload: LoginRequest) {\r\n  console.log(payload);\r\n  return api.post<LoginResponse>(\"/api/auth/login\", payload);\r\n}\r\n\r\nexport async function registerUser(payload: RegisterRequest) {\r\n  return api.post<RegisterResponse>(\"/api/auth/register\", payload);\r\n}\r\n\r\nexport async function resetPassword(payload: ResetPassRequest) {\r\n  return api.post<ResetPassResponse>(\"/api/auth/changePassword\", payload);\r\n}\r\n\r\nexport async function logoutUser() {\r\n  return api.delete<LogoutResponse>(\"/api/auth/logout\");\r\n}\r\n\r\n// export async function getUser() {\r\n//   return api.get<GetUserResponse>(\"/api/Authenticate/userName\");\r\n// }\r\n\r\nexport async function getUser() {\r\n  return api.get<GetUserResponse>(\"/api/auth/username\");\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useLoaderData,\r\n  useNavigate\r\n} from \"react-router-dom\";\r\n\r\n//styles\r\nimport {\r\n  useId,\r\n  Input,\r\n  Button,\r\n  Field,\r\n  Link,\r\n  ToastTitle,\r\n  Toast,\r\n  useToastController,\r\n  Toaster,\r\n  ToastIntent,\r\n} from \"@fluentui/react-components\";\r\nimport {\r\n  PersonRegular,\r\n  Eye24Regular,\r\n  EyeOff24Regular\r\n} from \"@fluentui/react-icons\";\r\n\r\nimport { Alert } from \"@fluentui/react-components/unstable\";\r\nimport \"../../styles/index.scss\"\r\nimport styles from './styles.module.scss';\r\nimport cx from 'classnames';\r\n\r\n// APIs\r\nimport { login } from \"@mimo/authentication\";\r\n\r\n// types\r\nimport type { LoginRequest } from \"@mimo/authentication\";\r\n\r\n//form validation\r\nimport { useForm, SubmitHandler, FieldValues } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\nconst getCharacterValidationError = (str: string) => {\r\n  return `Your password must have at least 1 ${str} character`;\r\n};\r\n\r\nconst schema = yup.object({\r\n  username: yup.string()\r\n    .min(3, 'Username must be at least 3 characters long')\r\n    .max(10, 'Username must be below 10 characters')\r\n    .required('Please Enter your Username'),\r\n  password: yup.string()\r\n    .min(6, 'Passsword must be at least 6 characters long')\r\n    .max(12, 'Passsword must be below 12 characters')\r\n    .matches(/[0-9]/, getCharacterValidationError(\"digit\"))\r\n    .matches(/[a-z]/, getCharacterValidationError(\"lowercase\"))\r\n    .matches(/[A-Z]/, getCharacterValidationError(\"uppercase\"))\r\n    .matches(/[^\\w]/, getCharacterValidationError(\"symbol\"))\r\n    .required('Please Enter your Password'),\r\n}).required();\r\n\r\n\r\nexport default function Login() {\r\n  //alert message\r\n  const [alertMessage, setAlertMessage] = useState<string | undefined>(undefined);\r\n  const [isError, setIsError] = useState<boolean>()\r\n\r\n  //router things\r\n  const data = useLoaderData();\r\n  console.log(data, \"data\");\r\n  const navigate = useNavigate();\r\n\r\n  //for style\r\n  const usernameId = useId(\"username\");\r\n  const passwordId = useId(\"password\");\r\n  const [type, setType] = useState<\"password\" | \"text\">(\"password\");\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setType((prevType) => (prevType === \"password\" ? \"text\" : \"password\"));\r\n  };\r\n\r\n  //toaster fluent\r\n  const toasterId = useId(\"toaster\");\r\n  const { dispatchToast } = useToastController(toasterId);\r\n  const [intent, setIntent] = React.useState<\r\n    ToastIntent | \"progress\" | \"avatar\"\r\n  >(\"info\");\r\n  const notify = (message: string) => {\r\n    switch (intent) {\r\n      case \"error\":\r\n      case \"info\":\r\n      case \"success\":\r\n      case \"warning\":\r\n        dispatchToast(\r\n          <Toast>\r\n            <ToastTitle>{message}</ToastTitle>\r\n          </Toast>,\r\n          { position: \"top-end\", intent }\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  //react-hook-form\r\n  const { register,\r\n    handleSubmit,\r\n    trigger,\r\n    formState: { errors, isDirty, isValid }\r\n  } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const handleInputBlur = async (fieldName: string) => {\r\n    await trigger(fieldName);\r\n  };\r\n\r\n  const convertToLoginRequest = (dataInput: FieldValues): LoginRequest => {\r\n    const { username, password } = dataInput;\r\n    return {\r\n      username: username as string,\r\n      password: password as string,\r\n    };\r\n  };\r\n\r\n  //handle submit\r\n  // const onSubmit: React.FormEventHandler<HTMLFormElement> = async (\r\n  //   e: React.FormEvent<HTMLFormElement>\r\n  // ) => {\r\n  const onSubmit: SubmitHandler<FieldValues> = async (dataInput, event?: React.BaseSyntheticEvent) => {\r\n    // // Prevent the browser from reloading the page\r\n    event?.preventDefault();\r\n    // Read the form data\r\n    // const form = event?.target as HTMLFormElement;\r\n    // //e: React.FormEvent<HTMLFormElement>\r\n    // const formData = new FormData(form);\r\n    // // Or you can work with it as a plain object:\r\n    // // const formJson = Object.fromEntries(formDataJson.entries()) as LoginRequest;\r\n\r\n    // const formJson: LoginRequest = {\r\n    //   username: formData.get(\"username\") as string,\r\n    //   password: formData.get(\"password\") as string,\r\n    // };\r\n    // console.log(formJson)\r\n    const loginRequest = convertToLoginRequest(dataInput);\r\n    console.log(dataInput)\r\n    const { data, error, errorMessage } = await login(loginRequest);\r\n\r\n    //show alert\r\n    if (error) {\r\n      const obj = JSON.stringify(errorMessage);\r\n      const errMessage = JSON.parse(obj)\r\n      setAlertMessage(errMessage.message);\r\n      setIsError(true)\r\n      setIntent(\"error\")\r\n      notify(errMessage.message)\r\n\r\n    }\r\n\r\n    if (data) {\r\n      const { message, user } = data;\r\n      setAlertMessage(`${message}, ${user}`);\r\n      setIsError(false)\r\n      setIntent(\"success\")\r\n      notify(`${message}, ${user}`)\r\n\r\n\r\n      sessionStorage.setItem(\"user\", data.user)\r\n\r\n      //Store last visited page\r\n      const lastVisitedPage = sessionStorage.getItem('lastVisitedPage');\r\n      if (lastVisitedPage) {\r\n        navigate(lastVisitedPage);\r\n      } else {\r\n        navigate(\"/\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  //for alert animation\r\n  useEffect(() => {\r\n    let timeoutId: any;\r\n\r\n    if (alertMessage) {\r\n      timeoutId = setTimeout(() => {\r\n        setAlertMessage('');\r\n      }, 8000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [alertMessage]);\r\n\r\n\r\n  return <>\r\n    <div className={styles.alertSection}>\r\n      {alertMessage && (\r\n        <Alert intent={isError ? \"error\" : \"success\"}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n\r\n    <Toaster toasterId={toasterId} />\r\n\r\n    <form method=\"post\" onSubmit={handleSubmit(onSubmit)}>\r\n      <Field\r\n        size=\"large\"\r\n        label=\"Username\"\r\n        validationState={errors.username ? \"error\" : \"none\"}\r\n        validationMessage={\r\n          errors.username ? `${errors.username?.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          contentBefore={<PersonRegular />}\r\n          id={usernameId}\r\n          {...register(\"username\")}\r\n          onBlur={() => handleInputBlur(\"username\")}\r\n        />\r\n      </Field>\r\n\r\n      <Field\r\n        size=\"large\"\r\n        label=\"Password\"\r\n        validationState={errors.password ? \"error\" : \"none\"}\r\n        validationMessage={\r\n          errors.password ? `${errors.password?.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          type={type}\r\n          contentAfter={type === \"password\" ? <EyeOff24Regular onClick={togglePasswordVisibility} /> : <Eye24Regular onClick={togglePasswordVisibility} />}\r\n          id={passwordId}\r\n          {...register(\"password\")}\r\n          onBlur={() => handleInputBlur(\"password\")}\r\n        />\r\n      </Field>\r\n\r\n      <Button\r\n        appearance=\"primary\"\r\n        type=\"submit\"\r\n        size=\"large\"\r\n        disabled={!isDirty && !isValid}\r\n      >Login</Button>\r\n    </form>\r\n\r\n    <div className={cx(styles.box, styles.register)}>\r\n      <Link href=\"./login\">\r\n        Forgot Password?\r\n      </Link>\r\n      <Link href=\"./register\">\r\n        Register\r\n      </Link>\r\n    </div>\r\n\r\n  </>;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"register\":\"jQzBcjWmC2Y66TVKYL6x\",\"box\":\"GZy1qihtKiAeG4OdX8F9\",\"alertSection\":\"QCQS0laKPxh4hcm8knw7\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\n//styles\r\nimport {\r\n  Field,\r\n  Input,\r\n  Button,\r\n  Link,\r\n} from \"@fluentui/react-components\";\r\nimport {\r\n  PersonRegular,\r\n  Eye24Regular,\r\n  EyeOff24Regular,\r\n  Mail24Regular\r\n} from \"@fluentui/react-icons\";\r\nimport { Alert } from \"@fluentui/react-components/unstable\";\r\nimport \"../../styles/index.scss\"\r\n\r\n// APIs\r\nimport { registerUser } from \"@mimo/authentication\";\r\n\r\n// types\r\nimport type { RegisterRequest } from \"@mimo/authentication\";\r\n\r\n//form validation\r\nimport { useForm, SubmitHandler, FieldValues } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\n\r\nconst getCharacterValidationError = (str: string) => {\r\n  return `Your password must have at least 1 ${str} character`;\r\n};\r\n\r\nconst schema = yup.object({\r\n  username: yup.string()\r\n    .min(3, 'Username must be at least 3 characters long')\r\n    .max(10, 'Username must be below 10 characters')\r\n    .required('Please Enter your Username'),\r\n  email: yup.string()\r\n    .email('Invalid email')\r\n    .required('Please Enter your Email'),\r\n  password: yup.string()\r\n    .min(6, 'Passsword must be at least 6 characters long')\r\n    .max(12, 'Passsword be below 12 characters')\r\n    .matches(/[0-9]/, getCharacterValidationError(\"digit\"))\r\n    .matches(/[a-z]/, getCharacterValidationError(\"lowercase\"))\r\n    .matches(/[A-Z]/, getCharacterValidationError(\"uppercase\"))\r\n    .matches(/[^\\w]/, getCharacterValidationError(\"symbol\"))\r\n    .required('Please Enter your Password'),\r\n}).required();\r\n\r\nexport default function Register() {\r\n  //alert message\r\n  const [alertMessage, setAlertMessage] = useState<string | undefined>(\"\");\r\n  const [isError, setIsError] = useState<boolean>()\r\n\r\n  //router things\r\n  const data = useLoaderData();\r\n  console.log(data);\r\n\r\n  //for style\r\n  const [type, setType] = useState<\"password\" | \"text\">(\"password\");\r\n  const togglePasswordVisibility = () => {\r\n    setType((prevType) => (prevType === \"password\" ? \"text\" : \"password\"));\r\n  };\r\n\r\n  //react-hook-form\r\n  const { register,\r\n    handleSubmit,\r\n    trigger,\r\n    formState: { errors, isDirty, isValid }\r\n  } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const handleInputBlur = async (fieldName: string) => {\r\n    await trigger(fieldName);\r\n  };\r\n\r\n  const convertToRegisterRequest = (dataInput: FieldValues): RegisterRequest => {\r\n    const { username, email, password } = dataInput;\r\n    return {\r\n      username: username as string,\r\n      email: email as string,\r\n      password: password as string,\r\n    };\r\n  };\r\n\r\n  const onSubmit: SubmitHandler<FieldValues> = async (dataInput, event?: React.BaseSyntheticEvent) => {\r\n    // Prevent the browser from reloading the page\r\n    event?.preventDefault();\r\n\r\n    const registerRequest = convertToRegisterRequest(dataInput);\r\n    const { data, error, errorMessage } = await registerUser(registerRequest);\r\n\r\n    if (error) {\r\n      const obj = JSON.stringify(errorMessage);\r\n      const errMessage = JSON.parse(obj)\r\n      setAlertMessage(errMessage.message);\r\n      setIsError(true)\r\n    }\r\n\r\n    if (data) {\r\n      const { message } = data;\r\n      setAlertMessage(message);\r\n      setIsError(false)\r\n    }\r\n\r\n  }\r\n\r\n  //for alert animation\r\n  useEffect(() => {\r\n    let timeoutId: any;\r\n\r\n    if (alertMessage) {\r\n      timeoutId = setTimeout(() => {\r\n        setAlertMessage('');\r\n      }, 8000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [alertMessage]);\r\n\r\n\r\n  return <>\r\n    <div className=\"alert-section\">\r\n      {alertMessage && (\r\n        <Alert intent={isError ? \"error\" : \"success\"}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n\r\n    <form method=\"post\" onSubmit={handleSubmit(onSubmit)}>\r\n      <Field\r\n        size=\"large\"\r\n        label=\"Username\"\r\n        validationState={errors.username ? \"error\" : \"none\"}\r\n        validationMessage={errors.username ? `${errors.username.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          contentBefore={<PersonRegular />}\r\n          {...register(\"username\")}\r\n          onBlur={() => handleInputBlur(\"username\")}\r\n        />\r\n      </Field>\r\n\r\n      <Field\r\n        size=\"large\"\r\n        label=\"Email\"\r\n        validationState={errors.email ? \"error\" : \"none\"}\r\n        validationMessage={errors.email ? `${errors.email.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          contentBefore={<Mail24Regular />}\r\n          {...register(\"email\")}\r\n          onBlur={() => handleInputBlur(\"email\")}\r\n        />\r\n      </Field>\r\n\r\n      <Field\r\n        size=\"large\"\r\n        label=\"Password\"\r\n        validationState={errors.password ? \"error\" : \"none\"}\r\n        validationMessage={errors.password ? `${errors.password.message}` : null}\r\n        required\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          type={type}\r\n          contentAfter={type === \"password\" ? <EyeOff24Regular onClick={togglePasswordVisibility} /> : <Eye24Regular onClick={togglePasswordVisibility} />}\r\n          {...register(\"password\")}\r\n          onBlur={() => handleInputBlur(\"password\")}\r\n        />\r\n      </Field>\r\n\r\n      <Button\r\n        appearance=\"primary\"\r\n        type=\"submit\"\r\n        size=\"large\"\r\n        disabled={!isDirty && !isValid}\r\n      >Register</Button>\r\n    </form>\r\n\r\n    <div className=\"box\">\r\n      Have an account?{\" \"}\r\n      <Link href=\"./login\">\r\n        Login\r\n      </Link>\r\n    </div>\r\n\r\n  </>;\r\n}","import React from \"react\";\r\nimport CounterAppLogin from \"./components/CounterAppLogin/Component\";\r\nimport Register from \"./components/AppRegister/Component\";\r\n\r\nimport \"./styles/index.scss\";\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <section className=\"hero\"></section>\r\n      <main>\r\n        <section>\r\n          <h1>Hi, React_login222</h1>\r\n        </section>\r\n        <CounterAppLogin />\r\n        <Register />\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\"\r\nimport React from \"react\";\r\nimport {\r\n    RouterProvider,\r\n    createBrowserRouter\r\n} from \"react-router-dom\";\r\nimport { createRoot } from 'react-dom/client';\r\nimport { FluentProvider, teamsLightTheme } from '@fluentui/react-components';\r\n\r\nconst domNode = document.getElementById('root') as HTMLElement;\r\nconst root = createRoot(domNode);\r\n\r\nconst router = createBrowserRouter([\r\n    {\r\n        path: \"/\",\r\n        element: <App />,\r\n    },\r\n]);\r\n\r\nroot.render(\r\n    <React.StrictMode>\r\n        <FluentProvider theme={teamsLightTheme}>\r\n            <RouterProvider router={router} />\r\n        </FluentProvider>\r\n    </React.StrictMode>\r\n);"],"names":["request","url","method","requestPayload","config","fetch","headers","Accept","body","JSON","stringify","response","status","json","data","errorMessage","error","toString","get","post","put","batch","delete","login","payload","console","log","registerUser","getCharacterValidationError","str","schema","username","min","max","required","password","matches","Login","useState","undefined","alertMessage","setAlertMessage","isError","setIsError","navigate","usernameId","useId","passwordId","type","setType","togglePasswordVisibility","prevType","toasterId","dispatchToast","useToastController","intent","setIntent","notify","message","Toast","ToastTitle","position","resolver","yup","register","handleSubmit","trigger","formState","errors","isDirty","isValid","handleInputBlur","fieldName","useEffect","timeoutId","setTimeout","clearTimeout","className","Alert","Toaster","onSubmit","dataInput","event","preventDefault","loginRequest","convertToLoginRequest","obj","errMessage","parse","user","sessionStorage","setItem","lastVisitedPage","getItem","Field","size","label","validationState","validationMessage","Input","I","contentBefore","id","onBlur","contentAfter","onClick","Button","appearance","disabled","Link","href","email","Register","registerRequest","convertToRegisterRequest","domNode","document","getElementById","root","router","path","element","render","FluentProvider","theme"],"sourceRoot":""}